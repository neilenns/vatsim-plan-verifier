{
  "Verifier unit test": {
    "prefix": "vtest",
    "body": [
      "import { expect } from \"chai\";",
      "import { describe, it } from \"mocha\";",
      "import { getFlightPlan } from \"../../src/controllers/flightPlans.mjs\";",
      "import ${TM_FILENAME_BASE/(.*)\\..+$/$1/} from \"../../src/controllers/verifiers/${TM_FILENAME_BASE/(.*)\\..+$/$1/}.mjs\";",
      "import { IFlightPlan } from \"../../src/models/FlightPlan.mjs\";",
      "import { IVerifierResult } from \"../../src/models/VerifierResult.mjs\";",
      "import { SuccessResult } from \"../../src/types/result.mjs\";",
      "import {",
      "  addFlightPlans,",
      "  removeFlightPlans,",
      "} from \"../databaseSetup/manageFlightPlans.mjs\";",
      "",
      "const testData = [",
      "];",
      "",
      "describe(\"verifier: ${TM_FILENAME_BASE/(.*)\\..+$/$1/} tests\", () => {",
      "  before(",
      "    \"Add flight plans for tests\",",
      "    async () => await addFlightPlans(testData)",
      "  );",
      "",
      "  after(",
      "    \"Remove flight plans for tests\",",
      "    async () => await removeFlightPlans(testData)",
      "  );",
      "",
      "  it(\"a test\", async () => {",
      "    const flightPlan = await getFlightPlan(\"$2\");",
      "    expect(flightPlan.success).to.equal(true);",
      "",
      "    const result = await ${TM_FILENAME_BASE/(.*)\\..+$/$1/}(",
      "      (flightPlan as SuccessResult<IFlightPlan>).data",
      "    );",
      "",
      "    expect(result.success).to.equal(true);",
      "",
      "    const data = (result as SuccessResult<IVerifierResult>).data;",
      "    expect(data.status).to.equal(\"$3\");",
      "    expect(data.messageId).to.equal(\"$4\");",
      "  });",
      "});",
      ""
    ],
    "description": "Verifier test"
  },
  "Create a verifier": {
    "prefix": "verif",
    "isFileTemplate": true,
    "body": [
      "import { IFlightPlan } from \"../../models/FlightPlan.mjs\";",
      "import VerifierResult from \"../../models/VerifierResult.mjs\";",
      "import VerifierControllerResult from \"../../types/verifierControllerResult.mjs\";",
      "",
      "const verifierName = \"$1\";",
      "",
      "export default async function $1({",
      "  _id,",
      "  equipmentSuffix,",
      "}: IFlightPlan): Promise<VerifierControllerResult> {",
      "  // Set up the default result for a successful run of the verifier.",
      "  var result: VerifierControllerResult = {",
      "    success: true,",
      "    data: new VerifierResult({",
      "      flightPlanId: _id,",
      "      verifier: verifierName,",
      "      flightPlanPart: \"$2\",",
      "      priority: 5,",
      "    }),",
      "  };",
      "",
      "  try {",
      "    // This is the test the verifier is supposed to do.",
      "    if () {",
      "      result.data.status = \"Error\";",
      "      result.data.message = ``;",
      "      result.data.priority = 3;",
      "    } else {",
      "      result.data.status = \"Information\";",
      "      result.data.message = ``;",
      "    }",
      "",
      "    await result.data.save();",
      "  } catch (error) {",
      "    console.log(`Error running $1: ${error}`);",
      "",
      "    result = {",
      "      success: false,",
      "      errorType: \"UnknownError\",",
      "      error: `Error running $1: ${error}`,",
      "    };",
      "  }",
      "",
      "  return result;",
      "}",
      ""
    ],
    "description": "Create a verifier"
  }
}
